#ifndef UNISTD_ID
#define UNISTD_ID 1014

#include <type.h>

#define _POSIX_VERSION
#define _POSIX2_VERSION

#define _XOPEN_VERSION

#define _POSIX_ADVISORY_INFO WARN()
#define _POSIX_ASYNCHRONOUS_IO WARN()
#define _POSIX_BARRIERS WARN()
#define _POSIX_CHOWN_RESTRICTED WARN()
#define _POSIX_CLOCK_SELECTION WARN()
#define _POSIX_CPUTIME WARN()
#define _POSIX_FSYNC WARN()
#define _POSIX_IPV6 WARN()
#define _POSIX_JOB_CONTROL WARN()
#define _POSIX_MAPPED_FILES WARN()
#define _POSIX_MEMLOCK WARN()
#define _POSIX_MEMLOCK_RANGE WARN()
#define _POSIX_MEMORY_PROTECTION WARN()
#define _POSIX_MESSAGE_PASSING WARN()
#define _POSIX_MONOTONIC_CLOCK WARN()
#define _POSIX_NO_TRUNC WARN()
#define _POSIX_PRIORITIZED_IO WARN()
#define _POSIX_PRIORITY_SCHEDULING WARN()
#define _POSIX_RAW_SOCKETS WARN()
#define _POSIX_READER_WRITER_LOCKS WARN()
#define _POSIX_REALTIME_SIGNALS WARN()
#define _POSIX_REGEXP WARN()
#define _POSIX_SAVED_IDS WARN()
#define _POSIX_SEMAPHORES WARN()
#define _POSIX_SHARED_MEMORY_OBJECTS WARN()
#define _POSIX_SHELL WARN()
#define _POSIX_SPAWN WARN()
#define _POSIX_SPIN_LOCKS WARN()
#define _POSIX_SPORADIC_SERVER WARN()
#define _POSIX_SYNCHRONIZED_IO WARN()
#define _POSIX_THREAD_ATTR_STACKADDR WARN()
#define _POSIX_THREAD_ATTR_STACKSIZE WARN()
#define _POSIX_THREAD_CPUTIME WARN()
#define _POSIX_THREAD_PRIO_INHERIT WARN()
#define _POSIX_THREAD_PRIO_PROTECT WARN()
#define _POSIX_THREAD_PRIORITY_SCHEDULING WARN()
#define _POSIX_THREAD_PROCESS_SHARED WARN()
#define _POSIX_THREAD_SAFE_FUNCTIONS WARN()
#define _POSIX_THREAD_SPORADIC_SERVER WARN()
#define _POSIX_THREADS WARN()
#define _POSIX_TIMEOUTS WARN()
#define _POSIX_TIMERS WARN()
#define _POSIX_TRACE WARN()
#define _POSIX_TRACE_EVENT_FILTER WARN()
#define _POSIX_TRACE_INHERIT WARN()
#define _POSIX_TRACE_LOG WARN()
#define _POSIX_TYPED_MEMORY_OBJECTS WARN()
#define _POSIX_VDISABLE WARN()
#define _POSIX2_C_BIND WARN()
#define _POSIX2_C_DEV WARN()
#define _POSIX2_CHAR_TERM WARN()
#define _POSIX2_FORT_DEV WARN()
#define _POSIX2_FORT_RUN WARN()
#define _POSIX2_LOCALEDEF WARN()
#define _POSIX2_PBS WARN()
#define _POSIX2_PBS_ACCOUNTING WARN()
#define _POSIX2_PBS_CHECKPOINT WARN()
#define _POSIX2_PBS_LOCATE WARN()
#define _POSIX2_PBS_MESSAGE WARN()
#define _POSIX2_PBS_TRACK WARN()
#define _POSIX2_SW_DEV WARN()
#define _POSIX2_UPE WARN()
#define _POSIX_V6_ILP32_OFF32 WARN()
#define _POSIX_V6_ILP32_OFFBIG WARN()
#define _POSIX_V6_LP64_OFF64 WARN()
#define _POSIX_V6_LPBIG_OFFBIG WARN()
#define _XBS5_ILP32_OFF32 WARN()
#define _XBS5_ILP32_OFFBIG WARN()
#define _XBS5_LP64_OFF64 WARN()
#define _XBS5_LPBIG_OFFBIG WARN()
#define _XOPEN_CRYPT WARN()
#define _XOPEN_ENH_I18N WARN()
#define _XOPEN_LEGACY WARN()
#define _XOPEN_REALTIME WARN()
#define _XOPEN_REALTIME_THREADS WARN()
#define _XOPEN_SHM WARN()
#define _XOPEN_STREAMS WARN()
#define _XOPEN_UNIX WARN()

#define _POSIX_ASYNC_IO WARN()
#define _POSIX_PRIO_IO WARN()
#define _POSIX_SYNC_IO WARN()

#ifndef NULL
#define NULL 0
#endif

#define F_OK WARN()
#define R_OK WARN()
#define W_OK WARN()
#define X_OK WARN()

#define _CS_PATH WARN()
#define _CS_POSIX_V6_ILP32_OFF32_CFLAGS WARN()
#define _CS_POSIX_V6_ILP32_OFF32_LDFLAGS WARN()
#define _CS_POSIX_V6_ILP32_OFF32_LIBS WARN()
#define _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS WARN()
#define _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS WARN()
#define _CS_POSIX_V6_ILP32_OFFBIG_LIBS WARN()
#define _CS_POSIX_V6_LP64_OFF64_CFLAGS WARN()
#define _CS_POSIX_V6_LP64_OFF64_LDFLAGS WARN()
#define _CS_POSIX_V6_LP64_OFF64_LIBS WARN()
#define _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS WARN()
#define _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS WARN()
#define _CS_POSIX_V6_LPBIG_OFFBIG_LIBS WARN()
#define _CS_POSIX_V6_WIDTH_RESTRICTED_ENVS WARN()

#define _CS_XBS5_ILP32_OFF32_CFLAGS WARN()
#define _CS_XBS5_ILP32_OFF32_LDFLAGS WARN()
#define _CS_XBS5_ILP32_OFF32_LIBS WARN()
#define _CS_XBS5_ILP32_OFF32_LINTFLAGS WARN()
#define _CS_XBS5_ILP32_OFFBIG_CFLAGS WARN()
#define _CS_XBS5_ILP32_OFFBIG_LDFLAGS WARN()
#define _CS_XBS5_ILP32_OFFBIG_LIBS WARN()
#define _CS_XBS5_ILP32_OFFBIG_LINTFLAGS WARN()
#define _CS_XBS5_LP64_OFF64_CFLAGS WARN()
#define _CS_XBS5_LP64_OFF64_LDFLAGS WARN()
#define _CS_XBS5_LP64_OFF64_LIBS WARN()
#define _CS_XBS5_LP64_OFF64_LINTFLAGS WARN()
#define _CS_XBS5_LPBIG_OFFBIG_CFLAGS WARN()
#define _CS_XBS5_LPBIG_OFFBIG_LDFLAGS WARN()
#define _CS_XBS5_LPBIG_OFFBIG_LIBS WARN()
#define _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS WARN()

#ifndef SEEK_CUR
#define SEEK_CUR 1
#endif
#ifndef SEEK_END
#define SEEK_END 2
#endif
#ifndef SEEK_SET
#define SEEK_SET 0
#endif

#define F_LOCK WARN()
#define F_TEST WARN()
#define F_TLOCK WARN()
#define F_ULOCK WARN()
#define _PC_2_SYMLINKS WARN()
#define _PC_ALLOC_SIZE_MIN WARN()
#define _PC_ASYNC_IO WARN()
#define _PC_CHOWN_RESTRICTED WARN()
#define _PC_FILESIZEBITS WARN()
#define _PC_LINK_MAX WARN()
#define _PC_MAX_CANON WARN()
#define _PC_MAX_INPUT WARN()
#define _PC_NAME_MAX WARN()
#define _PC_NO_TRUNC WARN()
#define _PC_PATH_MAX WARN()
#define _PC_PIPE_BUF WARN()
#define _PC_PRIO_IO WARN()
#define _PC_REC_INCR_XFER_SIZE WARN()
#define _PC_REC_MIN_XFER_SIZE WARN()
#define _PC_REC_XFER_ALIGN WARN()
#define _PC_SYMLINK_MAX WARN()
#define _PC_SYNC_IO WARN()
#define _PC_VDISABLE WARN()
#define _SC_2_C_BIND WARN()
#define _SC_2_C_DEV WARN()
#define _SC_2_CHAR_TERM WARN()
#define _SC_2_FORT_DEV WARN()
#define _SC_2_FORT_RUN WARN()
#define _SC_2_LOCALEDEF WARN()
#define _SC_2_PBS WARN()
#define _SC_2_PBS_ACCOUNTING WARN()
#define _SC_2_PBS_CHECKPOINT WARN()
#define _SC_2_PBS_LOCATE WARN()
#define _SC_2_PBS_MESSAGE WARN()
#define _SC_2_PBS_TRACK WARN()
#define _SC_2_SW_DEV WARN()
#define _SC_2_UPE WARN()
#define _SC_2_VERSION WARN()
#define _SC_ADVISORY_INFO WARN()
#define _SC_AIO_LISTIO_MAX WARN()
#define _SC_AIO_MAX WARN()
#define _SC_AIO_PRIO_DELTA_MAX WARN()
#define _SC_ARG_MAX WARN()
#define _SC_ASYNCHRONOUS_IO WARN()
#define _SC_ATEXIT_MAX WARN()
#define _SC_BARRIERS WARN()
#define _SC_BC_BASE_MAX WARN()
#define _SC_BC_DIM_MAX WARN()
#define _SC_BC_SCALE_MAX WARN()
#define _SC_BC_STRING_MAX WARN()
#define _SC_CHILD_MAX WARN()
#define _SC_CLK_TCK WARN()
#define _SC_CLOCK_SELECTION WARN()
#define _SC_COLL_WEIGHTS_MAX WARN()
#define _SC_CPUTIME WARN()
#define _SC_DELAYTIMER_MAX WARN()
#define _SC_EXPR_NEST_MAX WARN()
#define _SC_FSYNC WARN()
#define _SC_GETGR_R_SIZE_MAX WARN()
#define _SC_GETPW_R_SIZE_MAX WARN()
#define _SC_HOST_NAME_MAX WARN()
#define _SC_IOV_MAX WARN()
#define _SC_IPV6 WARN()
#define _SC_JOB_CONTROL WARN()
#define _SC_LINE_MAX WARN()
#define _SC_LOGIN_NAME_MAX WARN()
#define _SC_MAPPED_FILES WARN()
#define _SC_MEMLOCK WARN()
#define _SC_MEMLOCK_RANGE WARN()
#define _SC_MEMORY_PROTECTION WARN()
#define _SC_MESSAGE_PASSING WARN()
#define _SC_MONOTONIC_CLOCK WARN()
#define _SC_MQ_OPEN_MAX WARN()
#define _SC_MQ_PRIO_MAX WARN()
#define _SC_NGROUPS_MAX WARN()
#define _SC_OPEN_MAX WARN()
#define _SC_PAGE_SIZE WARN()
#define _SC_PAGESIZE WARN()
#define _SC_PRIORITIZED_IO WARN()
#define _SC_PRIORITY_SCHEDULING WARN()
#define _SC_RAW_SOCKETS WARN()
#define _SC_RE_DUP_MAX WARN()
#define _SC_READER_WRITER_LOCKS WARN()
#define _SC_REALTIME_SIGNALS WARN()
#define _SC_REGEXP WARN()
#define _SC_RTSIG_MAX WARN()
#define _SC_SAVED_IDS WARN()
#define _SC_SEM_NSEMS_MAX WARN()
#define _SC_SEM_VALUE_MAX WARN()
#define _SC_SEMAPHORES WARN()
#define _SC_SHARED_MEMORY_OBJECTS WARN()
#define _SC_SHELL WARN()
#define _SC_SIGQUEUE_MAX WARN()
#define _SC_SPAWN WARN()
#define _SC_SPIN_LOCKS WARN()
#define _SC_SPORADIC_SERVER WARN()
#define _SC_SS_REPL_MAX WARN()
#define _SC_STREAM_MAX WARN()
#define _SC_SYMLOOP_MAX WARN()
#define _SC_SYNCHRONIZED_IO WARN()
#define _SC_THREAD_ATTR_STACKADDR WARN()
#define _SC_THREAD_ATTR_STACKSIZE WARN()
#define _SC_THREAD_CPUTIME WARN()
#define _SC_THREAD_DESTRUCTOR_ITERATIONS WARN()
#define _SC_THREAD_KEYS_MAX WARN()
#define _SC_THREAD_PRIO_INHERIT WARN()
#define _SC_THREAD_PRIO_PROTECT WARN()
#define _SC_THREAD_PRIORITY_SCHEDULING WARN()
#define _SC_THREAD_PROCESS_SHARED WARN()
#define _SC_THREAD_SAFE_FUNCTIONS WARN()
#define _SC_THREAD_SPORADIC_SERVER WARN()
#define _SC_THREAD_STACK_MIN WARN()
#define _SC_THREAD_THREADS_MAX WARN()
#define _SC_THREADS WARN()
#define _SC_TIMEOUTS WARN()
#define _SC_TIMER_MAX WARN()
#define _SC_TIMERS WARN()
#define _SC_TRACE WARN()
#define _SC_TRACE_EVENT_FILTER WARN()
#define _SC_TRACE_EVENT_NAME_MAX WARN()
#define _SC_TRACE_INHERIT WARN()
#define _SC_TRACE_LOG WARN()
#define _SC_TRACE_NAME_MAX WARN()
#define _SC_TRACE_SYS_MAX WARN()
#define _SC_TRACE_USER_EVENT_MAX WARN()
#define _SC_TTY_NAME_MAX WARN()
#define _SC_TYPED_MEMORY_OBJECTS WARN()
#define _SC_TZNAME_MAX WARN()
#define _SC_V6_ILP32_OFF32 WARN()
#define _SC_V6_ILP32_OFFBIG WARN()
#define _SC_V6_LP64_OFF64 WARN()
#define _SC_V6_LPBIG_OFFBIG WARN()
#define _SC_VERSION WARN()
#define _SC_XBS5_ILP32_OFF32 WARN()
#define _SC_XBS5_ILP32_OFFBIG WARN()
#define _SC_XBS5_LP64_OFF64 WARN()
#define _SC_XBS5_LPBIG_OFFBIG WARN()
#define _SC_XOPEN_CRYPT WARN()
#define _SC_XOPEN_ENH_I18N WARN()
#define _SC_XOPEN_LEGACY WARN()
#define _SC_XOPEN_REALTIME WARN()
#define _SC_XOPEN_REALTIME_THREADS WARN()
#define _SC_XOPEN_SHM WARN()
#define _SC_XOPEN_STREAMS WARN()
#define _SC_XOPEN_UNIX WARN()
#define _SC_XOPEN_VERSION WARN()

#define STDERR_FILENO 2
#define STDIN_FILENO 0
#define STDOUT_FILENO 1

extern char  *optarg;
extern int    optind, opterr, optopt;

#define access ((int (*)(const char *, int)) get_func_addr(UNISTD_ID, 2))   
#define alarm ((unsigned int (*)(unsigned int)) get_func_addr(UNISTD_ID, 3))
#define chdir ((int (*)(const char *)) get_func_addr(UNISTD_ID, 4))
#define chown ((int (*)(const char *, uid_t, gid_t)) get_func_addr(UNISTD_ID, 5))
#define close ((int (*)(int)) get_func_addr(UNISTD_ID, 6))
#define confstr ((size_t (*)(int, char *, size_t)) get_func_addr(UNISTD_ID, 7))
#define crypt ((char *(*)(char *, const char *)) get_func_addr(UNISTD_ID, 8))
#define ctermid ((char *(*)(char *)) get_func_addr(UNISTD_ID, 9))
#define dup ((int (*)(int)) get_func_addr(UNISTD_ID, 10))
#define dup2 ((int (*)(int, int)) get_func_addr(UNISTD_ID, 11))
#define encrypt ((void (*)(char *, int)) get_func_addr(UNISTD_ID, 12))
#define execl ((int (*)(const char *, const char *, ...)) get_func_addr(UNISTD_ID, 13))
#define execle ((int (*)(const char *, const char *, ...)) get_func_addr(UNISTD_ID, 14))
#define execlp ((int (*)(const char *, const char *, ...)) get_func_addr(UNISTD_ID, 15))
#define execv ((int (*)(const char *, char *const[])) get_func_addr(UNISTD_ID, 16))
#define execve ((int (*)(const char *, char *const[], char *const[])) get_func_addr(UNISTD_ID, 17))
#define execvp ((int (*)(const char *, char *const[])) get_func_addr(UNISTD_ID, 18))
#define _exit ((void (*)(int)) get_func_addr(UNISTD_ID, 19))
#define fchown ((int (*)(int, uid_t, gid_t)) get_func_addr(UNISTD_ID, 20))
#define fchdir ((int (*)(int)) get_func_addr(UNISTD_ID, 21))
#define fdatasync ((int (*)(int)) get_func_addr(UNISTD_ID, 22))
#define fork ((pid_t (*)(void)) get_func_addr(UNISTD_ID, 23))
#define fpathconf ((long (*)(int, int)) get_func_addr(UNISTD_ID, 24))
#define fsync ((int (*)(int)) get_func_addr(UNISTD_ID, 25))
#define ftruncate ((int (*)(int, off_t)) get_func_addr(UNISTD_ID, 26))
#define getcwd ((char *(*)(char *, size_t)) get_func_addr(UNISTD_ID, 27))
#define getegid ((gid_t (*)(void)) get_func_addr(UNISTD_ID, 28))
#define geteuid ((uid_t (*)(void)) get_func_addr(UNISTD_ID, 29))
#define getgid ((gid_t (*)(void)) get_func_addr(UNISTD_ID, 30))
#define getgroups ((int (*)(int, gid_t *)) get_func_addr(UNISTD_ID, 31))
#define gethostid ((long (*)(void)) get_func_addr(UNISTD_ID, 32))
#define gethostname ((int (*)(char *, size_t)) get_func_addr(UNISTD_ID, 33))
#define getlogin ((char *(*)(void)) get_func_addr(UNISTD_ID, 34))
#define getlogin_r ((int (*)(char *, size_t)) get_func_addr(UNISTD_ID, 35))
#define getopt ((int (*)(int, char *const[], const char *)) get_func_addr(UNISTD_ID, 36))
#define getpgid ((pid_t (*)(pid_t)) get_func_addr(UNISTD_ID, 37))
#define getpgrp ((pid_t (*)(void)) get_func_addr(UNISTD_ID, 38))
#define getpid ((pid_t (*)(void)) get_func_addr(UNISTD_ID, 39))
#define getppid ((pid_t (*)(void)) get_func_addr(UNISTD_ID, 40))
#define getsid ((pid_t (*)(pid_t)) get_func_addr(UNISTD_ID, 41))
#define getuid ((uid_t (*)(void)) get_func_addr(UNISTD_ID, 42))
#define getwd ((char *(*)(char *)) get_func_addr(UNISTD_ID, 43))
#define isatty ((int (*)(int)) get_func_addr(UNISTD_ID, 44))
#define lchown ((int (*)(const char *, uid_t, gid_t)) get_func_addr(UNISTD_ID, 45))
#define link ((int (*)(const char *, const char *)) get_func_addr(UNISTD_ID, 46))
#define lockf ((int (*)(int, int, off_t)) get_func_addr(UNISTD_ID, 47))
#define lseek ((off_t (*)(int, off_t, int)) get_func_addr(UNISTD_ID, 48))
#define nice ((int (*)(int)) get_func_addr(UNISTD_ID, 49))
#define pathconf ((long (*)(const char *, int)) get_func_addr(UNISTD_ID, 50))
#define pause ((int (*)(void)) get_func_addr(UNISTD_ID, 51))
#define pipe ((int (*)(int *)) get_func_addr(UNISTD_ID, 52))
#define pread ((ssize_t (*)(int, void *, size_t, off_t)) get_func_addr(UNISTD_ID, 53))
#define pwrite ((ssize_t (*)(int, const void *, size_t, off_t)) get_func_addr(UNISTD_ID, 54))
#define read ((ssize_t (*)(int, void *, size_t)) get_func_addr(UNISTD_ID, 55))
#define readlink ((ssize_t (*)(const char *, char *, size_t)) get_func_addr(UNISTD_ID, 56))
#define rmdir ((int (*)(const char *)) get_func_addr(UNISTD_ID, 57))
#define setegid ((int (*)(gid_t)) get_func_addr(UNISTD_ID, 58))
#define seteuid ((int (*)(uid_t)) get_func_addr(UNISTD_ID, 59))
#define setgid ((int (*)(gid_t)) get_func_addr(UNISTD_ID, 60))
#define setpgid ((int (*)(pid_t, pid_t)) get_func_addr(UNISTD_ID, 61))
#define setpgrp ((pid_t (*)(void)) get_func_addr(UNISTD_ID, 62))
#define setregid ((int (*)(gid_t, gid_t)) get_func_addr(UNISTD_ID, 63))
#define setreuid ((int (*)(uid_t, uid_t)) get_func_addr(UNISTD_ID, 64))
#define setsid ((pid_t (*)(void)) get_func_addr(UNISTD_ID, 65))
#define setuid ((int (*)(uid_t)) get_func_addr(UNISTD_ID, 66))
#define sleep ((unsigned int (*)(unsigned int)) get_func_addr(UNISTD_ID, 67))
#define swab ((void (*)(const void *, void *, ssize_t)) get_func_addr(UNISTD_ID, 68))
#define symlink ((int (*)(const char *, const char *)) get_func_addr(UNISTD_ID, 69))
#define sync ((void (*)(void)) get_func_addr(UNISTD_ID, 70))
#define sysconf ((long (*)(int)) get_func_addr(UNISTD_ID, 71))
#define tcgetpgrp ((pid_t (*)(int)) get_func_addr(UNISTD_ID, 72))
#define tcsetpgrp ((int (*)(int, pid_t)) get_func_addr(UNISTD_ID, 73))
#define truncate ((int (*)(const char *, off_t)) get_func_addr(UNISTD_ID, 74))
#define ttyname ((char *(*)(int)) get_func_addr(UNISTD_ID, 75))
#define ttyname_r ((int (*)(int, char *, size_t)) get_func_addr(UNISTD_ID, 76))
#define ualarm ((useconds_t (*)(useconds_t, useconds_t)) get_func_addr(UNISTD_ID, 77))
#define unlink ((int (*)(const char *)) get_func_addr(UNISTD_ID, 78))
#define usleep ((int (*)(useconds_t)) get_func_addr(UNISTD_ID, 79))
#define vfork ((pid_t (*)(void)) get_func_addr(UNISTD_ID, 80))
#define write ((ssize_t (*)(int, const void *, size_t)) get_func_addr(UNISTD_ID, 81))

#endif
